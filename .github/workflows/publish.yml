name: Publish Package

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: write # Required for creating releases
  packages: write # Required for publishing packages

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: package/package-lock.json

      - name: Install dependencies
        working-directory: ./package
        run: npm ci

      - name: Lint code
        working-directory: ./package
        run: npm run lint

      - name: Build project
        working-directory: ./package
        run: npm run build

      - name: Run tests
        working-directory: ./package
        run: npm test

  publish:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          registry-url: "https://registry.npmjs.org"
          cache: "npm"
          cache-dependency-path: package/package-lock.json

      - name: Install dependencies
        working-directory: ./package
        run: npm ci

      - name: Lint code
        working-directory: ./package
        run: npm run lint

      - name: Run tests
        working-directory: ./package
        run: npm test

      - name: Build project
        working-directory: ./package
        run: npm run build

      - name: Check if version has been updated
        id: check
        working-directory: ./package
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          PUBLISHED_VERSION=$(npm view repo-code-stats version 2>/dev/null || echo "0.0.0")
          echo "package_version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT
          echo "published_version=$PUBLISHED_VERSION" >> $GITHUB_OUTPUT
          if [ "$PACKAGE_VERSION" != "$PUBLISHED_VERSION" ]; then
            echo "should_publish=true" >> $GITHUB_OUTPUT
            echo "ðŸš€ Version changed from $PUBLISHED_VERSION to $PACKAGE_VERSION"
          else
            echo "should_publish=false" >> $GITHUB_OUTPUT
            echo "ðŸ“¦ Version $PACKAGE_VERSION already published"
          fi

      - name: Publish to npm
        if: steps.check.outputs.should_publish == 'true'
        working-directory: ./package
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: steps.check.outputs.should_publish == 'true'
        run: |
          gh release create "v${{ steps.check.outputs.package_version }}" \
            --title "Release v${{ steps.check.outputs.package_version }}" \
            --notes "ðŸš€ Automated release of version ${{ steps.check.outputs.package_version }}

          ## Changes
          This release was automatically created when the version in package.json was updated.

          ## Installation
          \`\`\`bash
          npm install repo-code-stats@${{ steps.check.outputs.package_version }}
          \`\`\`"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
